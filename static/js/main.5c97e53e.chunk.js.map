{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Phonebook.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","services/phonebookAPI.js","redux/Phonebook/phonebook-operation.js","redux/Phonebook/phonebook-selectors.js","components/ContactForm/ContactForm.jsx","redux/Phonebook/phonebook-action.js","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/Phonebook.jsx","App.js","reportWebVitals.js","redux/Phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContacts","a","axios","get","data","addContact","contact","post","deleteContactById","contactId","delete","defaults","baseURL","createAsyncThunk","contactsAPI","contacts","deleteContacts","getFilteredData","state","items","normalizeFilter","getFilterValue","toLowerCase","filter","name","includes","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","handleInputChange","e","currentTarget","value","Error","reset","inputNameId","shortid","generate","inputNumberId","className","s","form","onSubmit","preventDefault","contactsOperations","htmlFor","type","pattern","title","required","onChange","id","changeFilter","createAction","Filter","useSelector","contactsSelectors","label","input","ContactList","useEffect","list","map","item","button","onClick","Phonebook","subTitle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","fulfilled","_","payload","isLoading","pending","rejected","error","combineReducers","store","configureStore","reducer","contactReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c97e53e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"button\":\"ContactList_button__1RuFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Phonebook_title__veRiM\",\"subTitle\":\"Phonebook_subTitle__1Ew39\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\"};","import axios from 'axios';\n\n// axios.defaults.baseURL = 'http://localhost:4000';\n\naxios.defaults.baseURL = 'https://contacts-json-api.herokuapp.com/';\n\nexport async function fetchContacts() {\n  const { data } = await axios.get(`/contacts`);\n  return data;\n}\n\nexport async function addContact(contact) {\n  const { data } = await axios.post(`/contacts/`, contact);\n  return data;\n}\nexport async function deleteContactById(contactId) {\n  await axios.delete(`/contacts/${contactId}`);\n}\n","// import * as contactsAction from \"./phonebook-action\";\nimport * as contactsAPI from 'services/phonebookAPI';\n\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const fetchContacts = createAsyncThunk(\n  'phonebook/fetchContacts',\n  async () => {\n    const contacts = await contactsAPI.fetchContacts();\n    return contacts;\n  },\n);\nexport const addContact = createAsyncThunk(\n  'phonebook/addContacts',\n  async contact => {\n    const contacts = await contactsAPI.addContact(contact);\n    return contacts;\n  },\n);\nexport const deleteContacts = createAsyncThunk(\n  'phonebook/deleteContactById',\n  async contactId => {\n    await contactsAPI.deleteContactById(contactId);\n    return contactId;\n  },\n);\n\n// export const fetchContacts = () => async dispatch => {\n//     dispatch(contactsAction.fetchContactsRequest());\n\n//     try {\n//         const contacts = await contactsAPI.fetchContacts()\n//         dispatch(contactsAction.fetchContactsSuccess(contacts))\n//     }\n//     catch (error) {\n//         dispatch(contactsAction.fetchContactsError(error.message))\n//     }\n\n// }\n\n// export const fetchContactById = (id) => async dispatch => {\n//     dispatch(contactsAction.fetchContactsRequest())\n\n//     try {\n//         const book = await contactsAPI.fetchContactById(id)\n//         dispatch(contactsAction.fetchContactsSuccess(book))\n//     } catch (error) {\n//         dispatch(contactsAction.fetchContactsError(error.message))\n//     }\n// }\n","export const getFilteredData = state => {\n  const { items } = state.contacts;\n  const normalizeFilter = getFilterValue(state).toLowerCase();\n  return items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizeFilter),\n  );\n};\n\nexport const getFilterValue = state => state.contacts.filter;\n","import React, { useState } from 'react';\nimport shortid from 'shortid';\nimport { useDispatch } from 'react-redux';\n\nimport s from './ContactForm.module.css';\nimport { contactsOperations } from 'redux/Phonebook';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    const currentTarget = e.currentTarget;\n    switch (currentTarget.name) {\n      case 'name': {\n        setName(currentTarget.value);\n        break;\n      }\n      case 'number': {\n        setNumber(currentTarget.value);\n        break;\n      }\n      default: {\n        throw new Error('No such input!');\n      }\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(contactsOperations.addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const inputNameId = shortid.generate();\n  const inputNumberId = shortid.generate();\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label htmlFor={inputNameId}>Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={name}\n        onChange={handleInputChange}\n        id={inputNameId}\n      />\n      <label htmlFor={inputNumberId}>Number</label>\n      <input\n        id={inputNumberId}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        value={number}\n        onChange={handleInputChange}\n      />\n      <button type=\"submit\">add contact</button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { createAction } from '@reduxjs/toolkit';\n\n// export const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\n\n// export const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\n\n// export const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const changeFilter = createAction('phonebook/changeFilter');\n","import React from 'react';\nimport shortid from 'shortid';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport s from './Filter.module.css';\nimport { changeFilter } from 'redux/Phonebook/phonebook-action';\nimport { contactsSelectors } from 'redux/Phonebook';\n\nconst Filter = () => {\n  const id = shortid.generate();\n  const dispatch = useDispatch();\n  const value = useSelector(contactsSelectors.getFilterValue);\n\n  return (\n    <>\n      <label htmlFor={id} className={s.label}>\n        Find contacts by name\n      </label>\n      <input\n        className={s.input}\n        id={id}\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(changeFilter(e.currentTarget.value))}\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport s from './ContactList.module.css';\nimport { contactsOperations, contactsSelectors } from 'redux/Phonebook';\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(contactsSelectors.getFilteredData);\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(contact => (\n        <li className={s.item} key={contact.id}>\n          {contact.name}:<span>{contact.number}</span>\n          <button\n            className={s.button}\n            onClick={() =>\n              dispatch(contactsOperations.deleteContacts(contact.id))\n            }\n            type=\"button\"\n          >\n            delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import s from './Phonebook.module.css';\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\nfunction Phonebook() {\n  return (\n    <>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={s.subTitle}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n\nexport default Phonebook;\n","import './App.css';\nimport React from 'react';\n\nimport Phonebook from './components/Phonebook';\nimport data from './components/data.json';\n\nconst App = () => {\n  return <Phonebook contacts={data} />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\n\nimport { changeFilter } from './phonebook-action';\nimport {\n  fetchContacts,\n  addContact,\n  deleteContacts,\n} from './phonebook-operation';\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContacts.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n\n  [deleteContacts.pending]: () => true,\n  [deleteContacts.fulfilled]: () => false,\n  [deleteContacts.rejected]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer('', {\n  [fetchContacts.rejected]: (_, { payload }) => payload,\n  [fetchContacts.pending]: () => null,\n\n  [addContact.rejected]: (_, { payload }) => payload,\n  [addContact.pending]: () => null,\n\n  [deleteContacts.rejected]: (_, { payload }) => payload,\n  [deleteContacts.pending]: () => null,\n});\n\nexport default combineReducers({ items, isLoading, error, filter });\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactReducer from './Phonebook/phonebook-reducer';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n  },\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store.js';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}