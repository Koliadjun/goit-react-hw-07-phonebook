{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Phonebook.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","services/phonebookAPI.js","redux/Phonebook/phonebook-operation.js","redux/Phonebook/phonebook-selectors.js","components/ContactForm/ContactForm.jsx","redux/Phonebook/phonebook-action.js","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/Phonebook.jsx","App.js","reportWebVitals.js","redux/Phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContacts","a","axios","get","data","addContact","contact","post","deleteContactById","contactId","delete","defaults","baseURL","createAsyncThunk","contactsAPI","contacts","deleteContacts","getItems","state","items","getFilterValue","filter","getLoading","isLoading","getFilteredData","createSelector","normalizeFilter","toLowerCase","name","includes","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","contactsSelectors","handleInputChange","e","currentTarget","value","Error","reset","inputNameId","shortid","generate","inputNumberId","className","s","form","onSubmit","preventDefault","dataNameNormalized","findItem","find","alert","contactsOperations","htmlFor","type","pattern","title","required","onChange","id","changeFilter","createAction","Filter","label","input","ContactList","useEffect","list","map","item","button","onClick","Phonebook","subTitle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","fulfilled","_","payload","pending","rejected","error","combineReducers","store","configureStore","reducer","contactReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,8B,mBCA7FD,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,SAAW,8B,mBCA9DD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,mBCAxDD,EAAOC,QAAU,CAAC,KAAO,4B,m2BCKlB,SAAeC,IAAtB,+B,4CAAO,8BAAAC,EAAA,sEACkBC,IAAMC,IAAN,aADlB,uBACGC,EADH,EACGA,KADH,kBAEEA,GAFF,4C,sBAKA,SAAeC,EAAtB,kC,4CAAO,WAA0BC,GAA1B,iBAAAL,EAAA,sEACkBC,IAAMK,KAAN,aAAyBD,GAD3C,uBACGF,EADH,EACGA,KADH,kBAEEA,GAFF,4C,sBAIA,SAAeI,EAAtB,kC,4CAAO,WAAiCC,GAAjC,SAAAR,EAAA,sEACCC,IAAMQ,OAAN,oBAA0BD,IAD3B,4C,sBAXPP,IAAMS,SAASC,QAAU,2C,WCCZZ,EAAgBa,YAC3B,0BAD2C,sBAE3C,4BAAAZ,EAAA,sEACyBa,IADzB,cACQC,EADR,yBAESA,GAFT,4CAKWV,EAAaQ,YACxB,wBADwC,uCAExC,WAAMP,GAAN,eAAAL,EAAA,sEACyBa,EAAuBR,GADhD,cACQS,EADR,yBAESA,GAFT,2CAFwC,uDAO7BC,EAAiBH,YAC5B,8BAD4C,uCAE5C,WAAMJ,GAAN,SAAAR,EAAA,sEACQa,EAA8BL,GADtC,gCAESA,GAFT,2CAF4C,uD,OCjBjCQ,EAAW,SAAAC,GAAK,OAAIA,EAAMH,SAASI,OAEnCC,EAAiB,SAAAF,GAAK,OAAIA,EAAMH,SAASM,QAEzCC,EAAa,SAAAJ,GAAK,OAAIA,EAAMZ,QAAQiB,WAEpCC,EAAkBC,YAC7B,CAACR,EAAUG,IACX,SAACD,EAAOE,GACN,IAAMK,EAAkBL,EAAOM,cAC/B,OAAOR,EAAME,QAAO,SAAAf,GAAO,OACzBA,EAAQsB,KAAKD,cAAcE,SAASH,S,OCoE3BI,MA1Ef,WACE,MAAwBC,mBAAS,IAAjC,mBAAOH,EAAP,KAAaI,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeC,EAAf,KACMC,EAAWC,cACXjB,EAAQkB,YAAYC,EAAkBrB,UAEtCsB,EAAoB,SAAAC,GACxB,IAAMC,EAAgBD,EAAEC,cAExB,OAAQA,EAAcb,MACpB,IAAK,OACHI,EAAQS,EAAcC,OACtB,MAEF,IAAK,SACHR,EAAUO,EAAcC,OACxB,MAEF,QACE,MAAM,IAAIC,MAAM,oBAmBhBC,EAAQ,WACZZ,EAAQ,IACRE,EAAU,KAGNW,EAAcC,IAAQC,WACtBC,EAAgBF,IAAQC,WAC9B,OACE,uBAAME,UAAWC,IAAEC,KAAMC,SAtBN,SAAAZ,GACnBA,EAAEa,iBACF,IAAMC,EAAqB1B,EAAKD,cAC1B4B,EAAWpC,EAAMqC,MACrB,SAAAlD,GAAO,OAAIA,EAAQsB,KAAKD,gBAAkB2B,KAExCC,EACFE,MAAM,GAAD,OAAIF,EAAS3B,KAAb,4BAELO,EAASuB,EAAmBrD,WAAW,CAAEuB,OAAMK,YAEjDW,KAWA,UACE,uBAAOe,QAASd,EAAhB,kBACA,uBACEe,KAAK,OACLhC,KAAK,OACLiC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRrB,MAAOd,EACPoC,SAAUzB,EACV0B,GAAIpB,IAEN,uBAAOc,QAASX,EAAhB,oBACA,uBACEiB,GAAIjB,EACJY,KAAK,MACLhC,KAAK,SACLiC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRrB,MAAOT,EACP+B,SAAUzB,IAEZ,wBAAQqB,KAAK,SAAb,6B,iBCpEOM,EAAeC,YAAa,0BCqB1BC,EArBA,WACb,IAAMH,EAAKnB,IAAQC,WACbZ,EAAWC,cACXM,EAAQL,YAAYC,EAAkBlB,gBAE5C,OACE,qCACE,uBAAOuC,QAASM,EAAIhB,UAAWC,IAAEmB,MAAjC,mCAGA,uBACEpB,UAAWC,IAAEoB,MACbL,GAAIA,EACJL,KAAK,OACLlB,MAAOA,EACPsB,SAAU,SAAAxB,GAAC,OAAIL,EAAS+B,EAAa1B,EAAEC,cAAcC,e,iBCY9C6B,MA7Bf,WACE,IAAMpC,EAAWC,cAEXrB,EAAWsB,YAAYC,EAAkBd,iBAM/C,OAJAgD,qBAAU,WACRrC,EAASuB,EAAmB1D,mBAC3B,CAACmC,IAGF,oBAAIc,UAAWC,IAAEuB,KAAjB,SACG1D,EAAS2D,KAAI,SAAApE,GAAO,OACnB,qBAAI2C,UAAWC,IAAEyB,KAAjB,UACGrE,EAAQsB,KADX,IACiB,+BAAOtB,EAAQ2B,SAC9B,wBACEgB,UAAWC,IAAE0B,OACbC,QAAS,kBACP1C,EAASuB,EAAmB1C,eAAeV,EAAQ2D,MAErDL,KAAK,SALP,sBAF0BtD,EAAQ2D,UCF7Ba,I,MAAAA,EAZf,WACE,OACE,qCACE,oBAAI7B,UAAWC,IAAEY,MAAjB,uBACA,cAAC,EAAD,IACA,oBAAIb,UAAWC,IAAE6B,SAAjB,sBACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,QCDSC,EAJH,WACV,OAAO,cAAC,EAAD,CAAWjE,SAAUX,KCKf6E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wBCGR/D,GAAQuE,YAAc,IAAD,mBACxB1F,EAAc2F,WAAY,SAACC,EAAD,YAAMC,WADR,cAExBxF,EAAWsF,WAAY,SAACzE,EAAD,OAAU2E,EAAV,EAAUA,QAAV,6BAA4B3E,GAA5B,CAAmC2E,OAFlC,cAGxB7E,EAAe2E,WAAY,SAACzE,EAAD,OAAU2E,EAAV,EAAUA,QAAV,OAC1B3E,EAAMG,QAAO,qBAAG4C,KAAgB4B,QAJT,IAOrBtE,GAAYmE,aAAc,GAAD,mBAC5B1F,EAAc8F,SAAU,kBAAM,KADF,cAE5B9F,EAAc2F,WAAY,kBAAM,KAFJ,cAG5B3F,EAAc+F,UAAW,kBAAM,KAHH,cAK5B1F,EAAWyF,SAAU,kBAAM,KALC,cAM5BzF,EAAWsF,WAAY,kBAAM,KAND,cAO5BtF,EAAW0F,UAAW,kBAAM,KAPA,cAS5B/E,EAAe8E,SAAU,kBAAM,KATH,cAU5B9E,EAAe2E,WAAY,kBAAM,KAVL,cAW5B3E,EAAe+E,UAAW,kBAAM,KAXJ,IAczB1E,GAASqE,YAAc,GAAD,eACzBxB,GAAe,SAAC0B,EAAD,YAAMC,YAGlBG,GAAQN,YAAc,IAAD,mBACxB1F,EAAc+F,UAAW,SAACH,EAAD,YAAMC,WADP,cAExB7F,EAAc8F,SAAU,kBAAM,QAFN,cAIxBzF,EAAW0F,UAAW,SAACH,EAAD,YAAMC,WAJJ,cAKxBxF,EAAWyF,SAAU,kBAAM,QALH,cAOxB9E,EAAe+E,UAAW,SAACH,EAAD,YAAMC,WAPR,cAQxB7E,EAAe8E,SAAU,kBAAM,QARP,IAWZG,gBAAgB,CAAE9E,SAAOI,aAAWyE,SAAO3E,YCpC3C6E,GAPDC,YAAe,CAC3BC,QAAS,CACPrF,SAAUsF,IAEZC,UAAUC,ICEZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SACE,cAAC,EAAD,QAGJS,SAASC,eAAe,SAM1B3B,M","file":"static/js/main.b89fdcfd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"button\":\"ContactList_button__1RuFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Phonebook_title__veRiM\",\"subTitle\":\"Phonebook_subTitle__1Ew39\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\"};","import axios from 'axios';\n\n// axios.defaults.baseURL = 'http://localhost:4000';\n\naxios.defaults.baseURL = 'https://contacts-json-api.herokuapp.com/';\n\nexport async function fetchContacts() {\n  const { data } = await axios.get(`/contacts`);\n  return data;\n}\n\nexport async function addContact(contact) {\n  const { data } = await axios.post(`/contacts/`, contact);\n  return data;\n}\nexport async function deleteContactById(contactId) {\n  await axios.delete(`/contacts/${contactId}`);\n}\n","// import * as contactsAction from \"./phonebook-action\";\nimport * as contactsAPI from 'services/phonebookAPI';\n\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const fetchContacts = createAsyncThunk(\n  'phonebook/fetchContacts',\n  async () => {\n    const contacts = await contactsAPI.fetchContacts();\n    return contacts;\n  },\n);\nexport const addContact = createAsyncThunk(\n  'phonebook/addContacts',\n  async contact => {\n    const contacts = await contactsAPI.addContact(contact);\n    return contacts;\n  },\n);\nexport const deleteContacts = createAsyncThunk(\n  'phonebook/deleteContactById',\n  async contactId => {\n    await contactsAPI.deleteContactById(contactId);\n    return contactId;\n  },\n);\n\n// export const fetchContacts = () => async dispatch => {\n//     dispatch(contactsAction.fetchContactsRequest());\n\n//     try {\n//         const contacts = await contactsAPI.fetchContacts()\n//         dispatch(contactsAction.fetchContactsSuccess(contacts))\n//     }\n//     catch (error) {\n//         dispatch(contactsAction.fetchContactsError(error.message))\n//     }\n\n// }\n\n// export const fetchContactById = (id) => async dispatch => {\n//     dispatch(contactsAction.fetchContactsRequest())\n\n//     try {\n//         const book = await contactsAPI.fetchContactById(id)\n//         dispatch(contactsAction.fetchContactsSuccess(book))\n//     } catch (error) {\n//         dispatch(contactsAction.fetchContactsError(error.message))\n//     }\n// }\n","import { createSelector } from 'reselect';\n\nexport const getItems = state => state.contacts.items;\n\nexport const getFilterValue = state => state.contacts.filter;\n\nexport const getLoading = state => state.contact.isLoading;\n\nexport const getFilteredData = createSelector(\n  [getItems, getFilterValue],\n  (items, filter) => {\n    const normalizeFilter = filter.toLowerCase();\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n  },\n);\n","import React, { useState } from 'react';\nimport shortid from 'shortid';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport s from './ContactForm.module.css';\nimport { contactsOperations, contactsSelectors } from 'redux/Phonebook';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const items = useSelector(contactsSelectors.getItems);\n\n  const handleInputChange = e => {\n    const currentTarget = e.currentTarget;\n\n    switch (currentTarget.name) {\n      case 'name': {\n        setName(currentTarget.value);\n        break;\n      }\n      case 'number': {\n        setNumber(currentTarget.value);\n        break;\n      }\n      default: {\n        throw new Error('No such input!');\n      }\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const dataNameNormalized = name.toLowerCase();\n    const findItem = items.find(\n      contact => contact.name.toLowerCase() === dataNameNormalized,\n    );\n    if (findItem) {\n      alert(`${findItem.name} is already in contacts`);\n    } else {\n      dispatch(contactsOperations.addContact({ name, number }));\n    }\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const inputNameId = shortid.generate();\n  const inputNumberId = shortid.generate();\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label htmlFor={inputNameId}>Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={name}\n        onChange={handleInputChange}\n        id={inputNameId}\n      />\n      <label htmlFor={inputNumberId}>Number</label>\n      <input\n        id={inputNumberId}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        value={number}\n        onChange={handleInputChange}\n      />\n      <button type=\"submit\">add contact</button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { createAction } from '@reduxjs/toolkit';\n\n// export const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\n\n// export const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\n\n// export const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const changeFilter = createAction('phonebook/changeFilter');\n","import React from 'react';\nimport shortid from 'shortid';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport s from './Filter.module.css';\nimport { changeFilter } from 'redux/Phonebook/phonebook-action';\nimport { contactsSelectors } from 'redux/Phonebook';\n\nconst Filter = () => {\n  const id = shortid.generate();\n  const dispatch = useDispatch();\n  const value = useSelector(contactsSelectors.getFilterValue);\n\n  return (\n    <>\n      <label htmlFor={id} className={s.label}>\n        Find contacts by name\n      </label>\n      <input\n        className={s.input}\n        id={id}\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(changeFilter(e.currentTarget.value))}\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport s from './ContactList.module.css';\nimport { contactsOperations, contactsSelectors } from 'redux/Phonebook';\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(contactsSelectors.getFilteredData);\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(contact => (\n        <li className={s.item} key={contact.id}>\n          {contact.name}:<span>{contact.number}</span>\n          <button\n            className={s.button}\n            onClick={() =>\n              dispatch(contactsOperations.deleteContacts(contact.id))\n            }\n            type=\"button\"\n          >\n            delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import s from './Phonebook.module.css';\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\nfunction Phonebook() {\n  return (\n    <>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={s.subTitle}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n\nexport default Phonebook;\n","import './App.css';\nimport React from 'react';\n\nimport Phonebook from './components/Phonebook';\nimport data from './components/data.json';\n\nconst App = () => {\n  return <Phonebook contacts={data} />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\n\nimport { changeFilter } from './phonebook-action';\nimport {\n  fetchContacts,\n  addContact,\n  deleteContacts,\n} from './phonebook-operation';\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContacts.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n\n  [deleteContacts.pending]: () => true,\n  [deleteContacts.fulfilled]: () => false,\n  [deleteContacts.rejected]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer('', {\n  [fetchContacts.rejected]: (_, { payload }) => payload,\n  [fetchContacts.pending]: () => null,\n\n  [addContact.rejected]: (_, { payload }) => payload,\n  [addContact.pending]: () => null,\n\n  [deleteContacts.rejected]: (_, { payload }) => payload,\n  [deleteContacts.pending]: () => null,\n});\n\nexport default combineReducers({ items, isLoading, error, filter });\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactReducer from './Phonebook/phonebook-reducer';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n  },\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store.js';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}