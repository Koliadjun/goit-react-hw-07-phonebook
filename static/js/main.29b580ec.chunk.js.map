{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Phonebook.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","redux/Phonebook/phonebook-action.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/Phonebook.jsx","App.js","reportWebVitals.js","redux/Phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","connect","dispatch","onSubmitHandler","data","useState","setName","setNumber","handleInputChange","e","currentTarget","value","Error","reset","inputNameId","inputNumberId","className","s","form","onSubmit","preventDefault","htmlFor","type","pattern","title","required","onChange","state","contacts","filter","label","input","getFilteredData","items","normalizeFilter","toLowerCase","contact","includes","onClick","list","map","item","button","Phonebook","subTitle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","_","combineReducers","store","configureStore","reducer","contactReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29b580ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"button\":\"ContactList_button__1RuFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Phonebook_title__veRiM\",\"subTitle\":\"Phonebook_subTitle__1Ew39\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\"};","import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n// import actionsTypes from './phonebook-type';\n\nexport const addContact = createAction('phonebook/add', ({ name, number }) => ({\n  payload: { id: shortid.generate(), name, number },\n}));\n\n// export const addContact = ({ name, number }) => ({\n//   type: actionsTypes.ADD,\n//   payload: { id: shortid.generate(), name, number },\n// });\n\nexport const deleteContact = createAction('phonebook/delete');\n\n// export const deleteContact = contactId => ({\n//   type: actionsTypes.DELETE,\n//   payload: contactId,\n// });\n\nexport const changeFilter = createAction('phonebook/changeFilter');\n\n// export const changeFilter = value => ({\n//   type: actionsTypes.CHANGE_FILTER,\n//   payload: value,\n// });\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport { connect } from 'react-redux';\n\nimport s from './ContactForm.module.css';\nimport { addContact } from '../../redux/Phonebook/phonebook-action';\n\nfunction ContactForm({ onSubmitHandler }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = e => {\n    const currentTarget = e.currentTarget;\n    switch (currentTarget.name) {\n      case 'name': {\n        setName(currentTarget.value);\n        break;\n      }\n      case 'number': {\n        setNumber(currentTarget.value);\n        break;\n      }\n      default: {\n        throw new Error('No such input!');\n      }\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmitHandler({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const inputNameId = shortid.generate();\n  const inputNumberId = shortid.generate();\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label htmlFor={inputNameId}>Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={name}\n        onChange={handleInputChange}\n        id={inputNameId}\n      />\n      <label htmlFor={inputNumberId}>Number</label>\n      <input\n        id={inputNumberId}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        value={number}\n        onChange={handleInputChange}\n      />\n      <button type=\"submit\">add contact</button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmitHandler: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmitHandler: data => dispatch(addContact(data)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport { connect } from 'react-redux';\n\nimport s from './Filter.module.css';\nimport { changeFilter } from '../../redux/Phonebook/phonebook-action';\n\nconst Filter = ({ value, onChange }) => {\n  const id = shortid.generate();\n  return (\n    <>\n      <label htmlFor={id} className={s.label}>\n        Find contacts by name\n      </label>\n      <input\n        className={s.input}\n        id={id}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport s from './ContactList.module.css';\nimport { deleteContact } from '../../redux/Phonebook/phonebook-action';\n\nfunction ContactList({ contacts, onClick }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(contact => (\n        <li className={s.item} key={contact.id}>\n          {contact.name}:<span>{contact.number}</span>\n          <button\n            className={s.button}\n            onClick={() => onClick(contact.id)}\n            type=\"button\"\n          >\n            delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n    {},\n  ).isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nconst getFilteredData = (items, filter) => {\n  const normalizeFilter = filter.toLowerCase();\n  return items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizeFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getFilteredData(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onClick: id => dispatch(deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import PropTypes from 'prop-types';\n\nimport s from './Phonebook.module.css';\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\nfunction Phonebook() {\n  // const [contactData, setContactData] = useState(\n  //   JSON.parse(window.localStorage.getItem('contacts')) ?? [],\n  // );\n\n  // useEffect(() => {\n  //   window.localStorage.setItem('contacts', JSON.stringify(contactData));\n  // }, [contactData]);\n\n  return (\n    <>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={s.subTitle}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n\nPhonebook.propTypes = {\n  contacts: PropTypes.array,\n};\n\nexport default Phonebook;\n","import './App.css';\nimport React from 'react';\n\nimport Phonebook from './components/Phonebook';\nimport data from './components/data.json';\n\nconst App = () => {\n  return <Phonebook contacts={data} />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\n\n// import actions from './phonebook-type';\nimport { addContact, deleteContact, changeFilter } from './phonebook-action';\n\nconst items = createReducer([], {\n  [addContact]: (state, { payload }) => [...state, payload],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\n// const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case actions.ADD:\n//       return [...state, payload];\n\n//     case actions.DELETE:\n//       return state.filter(({ id }) => id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case actions.CHANGE_FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\nexport default combineReducers({ items, filter });\n","// import { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\n// import { composeWithDevTools } from 'redux-devtools-extension';\nimport contactReducer from './Phonebook/phonebook-reducer';\n\n// const rootReducer = combineReducers({ contacts: contactReducer });\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n  },\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store.js';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}